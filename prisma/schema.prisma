// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?
  price         Float
  imageUrl      String
  imageKey      String
  isActive      Boolean         @default(true)
  category      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  customOptions CustomOption[]
  orderItems    OrderItem[]
}

model CustomOption {
  id              Int              @id @default(autoincrement())
  name            String           // e.g., "Onion", "Ketchup", "No Cheese"
  price           Float            @default(0)
  product         Product          @relation(fields: [productId], references: [id])
  productId       Int
  selectedOptions SelectedOption[] // Relation to SelectedOption
}

model Order {
  id           Int         @id @default(autoincrement())
  customerName String?
  phone        String?
  totalAmount  Float
  status       String      @default("pending")
  createdAt    DateTime    @default(now())
  orderItems   OrderItem[]
}

model OrderItem {
  id              Int               @id @default(autoincrement())
  product         Product           @relation(fields: [productId], references: [id])
  productId       Int
  quantity        Int
  order           Order             @relation(fields: [orderId], references: [id])
  orderId         Int
  selectedOptions SelectedOption[]
}

model SelectedOption {
  id            Int          @id @default(autoincrement())
  option        CustomOption @relation(fields: [optionId], references: [id])
  optionId      Int
  orderItem     OrderItem    @relation(fields: [orderItemId], references: [id])
  orderItemId   Int
}